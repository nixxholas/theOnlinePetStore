<div class="row">
    <div class="col-md-12">
        <div id="alertingBox" class="alert alert-danger hidden" role="alert"></div>
        <div class="panel panel-primary">
            <div class="panel-heading">
                <div class="panel-title">Create Product Record</div>
                <div class="btn-group pull-right">

                </div>
            </div>
            <div class="panel-body">
                <form id="dataForm" role="form" class="form-horizontal">
                    <div class="form-group col-md-12">
                        <label class="control-label  col-md-3" for="prodNameInput">Product Name</label>

                        <input type="text" id="prodNameInput" class="form-control font-bold"
                               maxlength="50" placeholder="Product Name" value="" />
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3 photoUploadMarginFixProducts" for="fileInput">Photo</label>
                        <div class="col-md-8">
                            <input id="fileInput" name="fileInput" type="file" class="file input-group-lg" multiple />
                        </div>
                    </div>
                    <div class="form-group col-md-12" id="descriptionBox">
                        <label class="control-label col-md-3" for="descBox">Description</label>
                        <div  class="form-group col-md-8">
                            <textarea></textarea>
                        </div>
                    </div>
                    <div class="form-group col-md-12 hidden" id="endDateSegment">
                        <label class="control-label col-md-4" for="endDateInput">Price</label>

                    </div>
                    <div class="form-group col-md-12">
                        <label class="control-label col-md-1"></label>
                        <div class="col-md-10">
                            <div class="pull-right">
                                <input type="button" class="btn btn-primary" value="Save" id="saveButton" />
                                <a class="btn btn-default" asp-action="Index" asp-controler="Categories">Cancel</a>
                            </div>
                        </div>
                    </div>
                </form>
            </div><!-- end of div element which has the class="panel-body" -->
        </div><!-- end of the div element which has the class="panel" -->
    </div><!-- end of the div element which as the  class="col-md-offset-2 col-sm-8"-->
</div><!-- end of div element with class="row" -->

<script>
    tinymce.init({
        selector: 'textarea',
        height: 500,
        theme: 'modern',
        plugins: [
          'advlist autolink lists link image charmap print preview hr anchor pagebreak',
          'searchreplace wordcount visualblocks visualchars code fullscreen',
          'insertdatetime media nonbreaking save table contextmenu directionality',
          'emoticons template paste textcolor colorpicker textpattern imagetools'
        ],
        toolbar1: 'insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image',
        toolbar2: 'print preview media | forecolor backcolor emoticons',
        image_advtab: true,
        templates: [
          { title: 'Test template 1', content: 'Test 1' },
          { title: 'Test template 2', content: 'Test 2' }
        ],
        content_css: [
          '//fonts.googleapis.com/css?family=Lato:300,300i,400,400i',
          '//www.tinymce.com/css/codepen.min.css'
        ]
    });

    $("#jqxEndDate").jqxDateTimeInput({ width: '250px', height: '25px', formatString: 'dd/MM/yyyy', animationType: 'fade', min: new Date() });
    var startDateInput;
    var endDateInput;
   
    $('#jqxEndDate').on('change', function (event) {
        endDateInput = event.args.date;
    });

    setupvisibilityRadioListBox();

    //Using a function technique to create a JavaScript class, WebFormData
    function WebFormData(inCatName, inVisibilityId, inStartDate, inEndDate) {
        this.CatName = inCatName;
        this.VisibilityId = inVisibilityId;
        this.StartDate = inStartDate;
        this.EndDate = inEndDate;
    }

    $('#saveButton').on('click', function () {
        var collectedCatName = $('#catNameInput').val();
        if (collectedCatName == null || collectedCatName == "") {
            swal("Error!", "Please enter an appropriate category name!", "error")
            return; // Break out of the function
        }
        var collectedVisibilityId = $('input[name="Visibility"]:checked').val();
        if (collectedVisibilityId == null) {
            swal("Error!", "Please select a visibility type!", "error")
            return;
        }
        //Create a JavaScript object to contain the type name information
        if (collectedVisibilityId == 3) {
            var collectedStartDate = moment(startDateInput).format("DD/MM/YYYY");
            var collectedEndDate = moment(endDateInput).format("DD/MM/YYYY");
            // Date Checking is done Server-Sided
            //
            // Update 01 Jul 2016
            //
            // Reason 1:
            // Moment Js is 150 times slower than javascript
            // Proof of Concept: http://jsperf.com/momentjs-isafter-performance
            //
            // Reason 2:
            // http://stackoverflow.com/questions/25310242/moment-js-isafter-performance
            //
            var webFormData = new WebFormData(collectedCatName, collectedVisibilityId, collectedStartDate, collectedEndDate);
        } else {
            var webFormData = new WebFormData(collectedCatName, collectedVisibilityId, null, null);
        }

        //Serialize the webFormData object which contains the type name
        //data into a flat string. So that, it can be sent accross the Internet network successfully.
        var webFormDataInString = JSON.stringify(webFormData);

        $saveCategoryHandler = jQuery.ajax({
            type: 'POST',
            url: '/API/Categories/',
            dataType: 'json',
            contentType: 'application/json;',
            data: "'" + webFormDataInString + "'"
        })//end of ajax() call
        $saveCategoryHandler.done(function (data, textStatus, jqXHR) {
            swal("Hurray!", data.responseJSON.message, "Success");
        });//end of $saveCategoryHandler.done();
        $saveCategoryHandler.fail(function (data, textStatus, jqXHR) {
            swal("Oh no!", data.responseJSON.message, "error");
        });//end of $saveCategoryHandler.fail();
    });//end of $('#saveButton').on('click', function () {

    function setupvisibilityRadioListBox() {
        var $dataCommunicationTracker = jQuery.ajax({
            contentType: 'application/json',
            method: 'get',
            url: 'http://localhost:5008/API/Visibility/GetAllVisibilities',
        });

        /**
            So now, we will have to throw in all of the elements into
            the dropdown box
        **/
        $dataCommunicationTracker.done(function (data, textStatus, jqXHR) {
            // Like the previous cshtml, let's define a variable for
            // the visibilityRadioList box
            var $visibilityRadioListElement = $('#visibilityRadioList');
            // We then initialize the element container
            // for each element
            var $optionElement = null;

            // Then we implement a for loop to make things dynamic
            // for each course in the array called data
            for (index = 0; index < data.length; index++) {
                // We first define the visibility from the data array
                oneVisibility = data[index];
                // Then we put it into the element container
                $optionElement = $('<input type="radio" name="Visibility" onClick="checkRadio()" value="'
                    + oneVisibility.visibilityId + '"/>' + '<span>' + oneVisibility.visibilityName + '&nbsp;&nbsp;&nbsp;' + '</span>');
                // Then we add the element into the visibilityRadioList radio box
                $visibilityRadioListElement.append($optionElement);
            }
        });

        $dataCommunicationTracker.fail(function (data, textStatus, jqXHR) {
            swal("Oh no!", data.responseJSON.message, "error");
        });
    } //End of setupvisibilityRadioListBox() function

    function checkRadio() {
        if ($('input[name="Visibility"]:checked').val() == 3) {
            $("#startDateSegment").removeClass('hidden');
            $("#endDateSegment").removeClass('hidden');
        } else {
            $("#startDateSegment").addClass('hidden');
            $("#endDateSegment").addClass('hidden');
        }

    }
</script>
